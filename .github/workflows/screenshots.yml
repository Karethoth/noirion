name: Generate Screenshots

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual trigger

jobs:
  screenshots:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:15-3.4
        env:
          POSTGRES_USER: noirion
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: noirion
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install backend dependencies
      working-directory: ./src/backend
      run: npm ci

    - name: Run database migrations
      working-directory: ./src/backend
      run: npm run migrate
      env:
        POSTGRES_USER: noirion
        POSTGRES_PASSWORD: secret
        POSTGRES_HOST: localhost
        POSTGRES_DB: noirion
        POSTGRES_PORT: 5432

    - name: Start backend server
      working-directory: ./src/backend
      run: |
        npm start &
        sleep 5
        curl -f http://localhost:4000/health || exit 1
      env:
        POSTGRES_USER: noirion
        POSTGRES_PASSWORD: secret
        POSTGRES_HOST: localhost
        POSTGRES_DB: noirion
        POSTGRES_PORT: 5432
        PORT: 4000

    - name: Install frontend dependencies
      working-directory: ./src/frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./src/frontend
      run: npm run build

    - name: Install root dependencies
      run: npm install

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Start frontend server
      working-directory: ./src/frontend
      run: |
        npm run preview -- --port 2000 &
        npx wait-on http://localhost:2000 -t 30000

    - name: Run Playwright screenshots
      run: npx playwright test --project=screenshots
      env:
        SCREENSHOT_DIR: screenshots

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots
        path: screenshots/
        retention-days: 30

    - name: Commit screenshots to repository
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add screenshots/ || true
        git diff --staged --quiet || git commit -m "docs: update automated screenshots [skip ci]"
        git push || true
